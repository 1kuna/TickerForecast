{"trial_id": "012", "hyperparameters": {"space": [{"class_name": "Boolean", "config": {"name": "timeseries_block_1/rnn_block_1/bidirectional", "default": true, "conditions": []}}, {"class_name": "Choice", "config": {"name": "timeseries_block_1/rnn_block_1/layer_type", "default": "lstm", "conditions": [], "values": ["gru", "lstm"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "timeseries_block_1/rnn_block_1/num_layers", "default": 2, "conditions": [], "values": [1, 2, 3], "ordered": true}}, {"class_name": "Choice", "config": {"name": "regression_head_1/dropout", "default": 0, "conditions": [], "values": [0.0, 0.25, 0.5], "ordered": true}}, {"class_name": "Choice", "config": {"name": "optimizer", "default": "adam", "conditions": [], "values": ["adam", "sgd", "adam_weight_decay"], "ordered": false}}, {"class_name": "Choice", "config": {"name": "learning_rate", "default": 0.001, "conditions": [], "values": [0.1, 0.01, 0.001, 0.0001, 2e-05, 1e-05], "ordered": true}}], "values": {"timeseries_block_1/rnn_block_1/bidirectional": true, "timeseries_block_1/rnn_block_1/layer_type": "gru", "timeseries_block_1/rnn_block_1/num_layers": 3, "regression_head_1/dropout": 0.5, "optimizer": "sgd", "learning_rate": 0.1}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\zcane\\miniconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 250, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\zcane\\miniconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 215, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\zcane\\miniconda3\\envs\\tf\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 286, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\zcane\\miniconda3\\envs\\tf\\lib\\site-packages\\autokeras\\engine\\tuner.py\", line 101, in _build_and_fit_model\n    _, history = utils.fit_with_adaptive_batch_size(\n  File \"C:\\Users\\zcane\\miniconda3\\envs\\tf\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 88, in fit_with_adaptive_batch_size\n    history = run_with_adaptive_batch_size(\n  File \"C:\\Users\\zcane\\miniconda3\\envs\\tf\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 101, in run_with_adaptive_batch_size\n    history = func(x=x, validation_data=validation_data, **fit_kwargs)\n  File \"C:\\Users\\zcane\\miniconda3\\envs\\tf\\lib\\site-packages\\autokeras\\utils\\utils.py\", line 89, in <lambda>\n    batch_size, lambda **kwargs: model.fit(**kwargs), **fit_kwargs\n  File \"C:\\Users\\zcane\\miniconda3\\envs\\tf\\lib\\site-packages\\keras\\utils\\traceback_utils.py\", line 70, in error_handler\n    raise e.with_traceback(filtered_tb) from None\n  File \"C:\\Users\\zcane\\miniconda3\\envs\\tf\\lib\\site-packages\\tensorflow\\python\\eager\\execute.py\", line 54, in quick_execute\n    tensors = pywrap_tfe.TFE_Py_Execute(ctx._handle, device_name, op_name,\ntensorflow.python.framework.errors_impl.InternalError: Graph execution error:\n\nFailed to call ThenRnnForward with model config: [rnn_mode, rnn_input_mode, rnn_direction_mode]: 3, 0, 0 , [num_layers, input_size, num_units, dir_count, max_seq_length, batch_size, cell_num_units]: [1, 38, 19, 1, 5120, 256, 0] \n\t [[{{node CudnnRNN}}]]\n\t [[model/bidirectional_2/forward_gru_2/PartitionedCall]] [Op:__inference_train_function_127165]\n"}